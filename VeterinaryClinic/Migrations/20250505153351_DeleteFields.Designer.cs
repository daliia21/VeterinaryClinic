// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeterinaryClinic.DataBase;

#nullable disable

namespace VeterinaryClinic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250505153351_DeleteFields")]
    partial class DeleteFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.ClinicDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SpecializationDepartment")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClinicDepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfPet")
                        .HasColumnType("integer");

                    b.Property<Guid>("VeterinarianId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClinicDepartmentId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.Veterinarian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClinicDepartmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("ContactId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Specialization")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClinicDepartmentId");

                    b.HasIndex("ContactId");

                    b.ToTable("Veterinarians");
                });

            modelBuilder.Entity("VeterinaryClinic.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.Pet", b =>
                {
                    b.HasOne("VeterinaryClinic.AbstractModels.ClinicDepartment", "ClinicDepartment")
                        .WithMany("Pets")
                        .HasForeignKey("ClinicDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.AbstractModels.Veterinarian", "Veterinarian")
                        .WithMany("Pets")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClinicDepartment");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.Veterinarian", b =>
                {
                    b.HasOne("VeterinaryClinic.AbstractModels.ClinicDepartment", "ClinicDepartment")
                        .WithMany("Veterinarians")
                        .HasForeignKey("ClinicDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.Models.ContactInfo", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClinicDepartment");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.ClinicDepartment", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("Veterinarians");
                });

            modelBuilder.Entity("VeterinaryClinic.AbstractModels.Veterinarian", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
